{"version":3,"sources":["components/Contacts/ContactsList/Contactlist.module.css","components/Contacts/Section/Section.module.css","components/Contacts/Filter/Filter.module.css","components/Contacts/transitions/Contacts.module.css","components/Contacts/transitions/PhonebookHeader.module.css","utils/Notification.module.css","components/Contacts/transitions/Notify.module.css","components/Contacts/transitions/Filter.module.css","components/Contacts/Contacts.module.css","components/Contacts/InputForm/InputForm.module.css","utils/localStorage.js","components/Contacts/Section/Section.js","Redux/contactsActions.js","components/Contacts/InputForm/InputForm.js","components/Contacts/ContactsList/ContactsList.js","components/Contacts/Filter/Filter.js","utils/Notification.js","components/Contacts/Contacts.js","components/App.js","Redux/contactsReducers.js","Redux/store.js","index.js"],"names":["module","exports","key","serializedState","localStorage","getItem","undefined","JSON","parse","err","console","error","value","stringify","setItem","Section","children","className","styles","bodycontainet","container","Type","InputForm","state","userName","userPhone","handleChange","e","setState","target","name","isContactExist","props","contactState","contacts","find","item","toLowerCase","setTimeout","addContact","hendleSubmit","preventDefault","continer","inputName","onSubmit","this","inputFeld","type","onChange","BtnSubmit","Component","connect","dispatch","user","id","shortid","generate","payload","deleteContact","contactActions","length","TransitionGroup","component","map","CSSTransition","timeout","classNames","ContactTransition","contact","userData","button","onClick","changeFilter","filter","Notify","Contacts","isLoaded","contactsFromLS","localStorageLoader","addContacts","prevProps","filteredTasks","includes","in","NotifyTransition","unmountOnExit","HeaderTransition","phoneBookHeader","FilterTransition","App","contactReducer","action","store","createStore","devToolsEnhancer","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.290eaaf1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"continer\":\"Contactlist_continer__3c2uj\",\"contact\":\"Contactlist_contact__1Ch7M\",\"userData\":\"Contactlist_userData__2QSGr\",\"button\":\"Contactlist_button__qvgQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodycontainet\":\"Section_bodycontainet__2K0ef\",\"container\":\"Section_container__1_hze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__3DrTO\",\"inputFeld\":\"Filter_inputFeld__tEQo-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Contacts_enter__2Vjhx\",\"enterActive\":\"Contacts_enterActive__Cc6da\",\"exit\":\"Contacts_exit__rkJGw\",\"exitActive\":\"Contacts_exitActive__6i6GS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"PhonebookHeader_enter__3FzHg\",\"enterActive\":\"PhonebookHeader_enterActive__19QKi\",\"exit\":\"PhonebookHeader_exit__1sHJs\",\"exitActive\":\"PhonebookHeader_exitActive__3NwVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__1SbFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Notify_enter__1kgcX\",\"enterActive\":\"Notify_enterActive__ZSUh3\",\"exit\":\"Notify_exit__3hgyM\",\"exitActive\":\"Notify_exitActive__3_jMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Filter_enter__15fLy\",\"enterActive\":\"Filter_enterActive__2xoPh\",\"exit\":\"Filter_exit__36xrs\",\"exitActive\":\"Filter_exitActive__23Nt7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookHeader\":\"Contacts_phoneBookHeader__341rp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"continer\":\"InputForm_continer__1jwnY\",\"inputFeld\":\"InputForm_inputFeld__1BvEI\",\"inputName\":\"InputForm_inputName__2r6_v\",\"BtnSubmit\":\"InputForm_BtnSubmit__2SmAu\"};","const load = key => {\r\n    try {\r\n        const serializedState = localStorage.getItem(key);\r\n\r\n        return serializedState === null ? undefined : JSON.parse(serializedState);\r\n    } catch (err) {\r\n        console.error('Get state error: ', err);\r\n    }\r\n};\r\n\r\nconst save = (key, value) => {\r\n    try {\r\n        const serializedState = JSON.stringify(value);\r\n        localStorage.setItem(key, serializedState);\r\n    } catch (err) {\r\n        console.error('Set state error: ', err);\r\n    }\r\n};\r\n\r\nexport default {\r\n    load,\r\n    save\r\n};","import React, { Fragment } from 'react';\r\nimport styles from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ children }) => (\r\n  <Fragment>\r\n    <div className={styles.bodycontainet}>\r\n      <div className={styles.container}> {children} </div>\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","export const Type = {\r\n  ADDCONTACT: 'ADDCONTACT',\r\n  ADDCONTACTSLS: 'ADDCONTACTSLS',\r\n  DELETECONTACT: 'DELETECONTACT',\r\n  CHANGEFILTER: 'CHANGEFILTER',\r\n  EXISTCONTACTTOGGLE: 'EXISTCONTACTTOGGLE',\r\n};\r\n\r\nexport const addContact = user => ({\r\n  type: Type.ADDCONTACT,\r\n  payload: user,\r\n});\r\n\r\nexport const addContactsLS = users => ({\r\n  type: Type.ADDCONTACTSLS,\r\n  payload: users,\r\n});\r\n\r\nexport const isContactExist = () => ({\r\n  type: Type.EXISTCONTACTTOGGLE,\r\n});\r\n\r\nexport const deleteContact = id => ({\r\n  type: Type.DELETECONTACT,\r\n  payload: id,\r\n});\r\n\r\nexport const changeFilter = filter => ({\r\n  type: Type.CHANGEFILTER,\r\n  payload: filter,\r\n});\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\nimport * as contactActions from '../../../Redux/contactsActions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './InputForm.module.css';\r\n\r\nclass InputForm extends Component {\r\n  // static propTypes = {\r\n  //   onAddContacts: PropTypes.func.isRequired,\r\n  // };\r\n\r\n  state = {\r\n    userName: '',\r\n    userPhone: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  isContactExist = e => {\r\n    if (\r\n      this.props.contactState.contacts.find(\r\n        item =>\r\n          item.userName.toLowerCase() === this.state.userName.toLowerCase(),\r\n      )\r\n    ) {\r\n      this.props.isContactExist();\r\n      setTimeout(() => this.props.isContactExist(), 1000);\r\n\r\n      return;\r\n    }\r\n    this.props.addContact(e, this.state);\r\n  };\r\n\r\n  hendleSubmit = e => {\r\n    e.preventDefault();\r\n    this.isContactExist(e);\r\n    this.setState({\r\n      userName: '',\r\n      userPhone: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.continer}>\r\n        <h3 className={styles.inputName}> Name </h3>\r\n        <form onSubmit={this.hendleSubmit}>\r\n          <input\r\n            className={styles.inputFeld}\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            value={this.state.userName}\r\n            onChange={this.handleChange}\r\n          />\r\n          <h3 className={styles.inputName}> Number </h3>\r\n          <input\r\n            className={styles.inputFeld}\r\n            type=\"text\"\r\n            name=\"userPhone\"\r\n            value={this.state.userPhone}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button className={styles.BtnSubmit} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contactState: state,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: (e, state) =>\r\n    dispatch(\r\n      contactActions.addContact({\r\n        userName: state.userName,\r\n        userPhone: state.userPhone,\r\n        id: shortid.generate(),\r\n      }),\r\n    ),\r\n  isContactExist: () => dispatch(contactActions.isContactExist()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as contactActions from '../../../Redux/contactsActions';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport ContactTransition from '../transitions/Contacts.module.css';\r\nimport styles from './Contactlist.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) =>\r\n  contacts.length > 0 ? (\r\n    <TransitionGroup component=\"ul\" className={styles.continer}>\r\n      {contacts.map(({ userName, userPhone, id }) => (\r\n        <CSSTransition key={id} timeout={250} classNames={ContactTransition}>\r\n          <li className={styles.contact}>\r\n            <div className={styles.userData}>\r\n              <div> {userName} </div> <div>{userPhone}</div>\r\n            </div>\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n              onClick={() => deleteContact(id)}\r\n            >\r\n              <span> &#215;</span>\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  ) : (\r\n    <h3> You don `t have any contacts</h3>\r\n  );\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      userName: PropTypes.string.isRequired,\r\n      userPhone: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  // ondeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(contactActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as contactActions from '../../../Redux/contactsActions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ contactState, changeFilter }) => (\r\n  <div className={styles.container}>\r\n    <div> Find contacts by name </div>\r\n    <input\r\n      className={styles.inputFeld}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={contactState.filter}\r\n      onChange={changeFilter}\r\n    />\r\n  </div>\r\n);\r\n\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string.isRequired,\r\n//   onChangeFilter: PropTypes.func.isRequired,\r\n// };\r\n\r\nconst mapStateToProps = state => ({\r\n  contactState: state,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeFilter: e => dispatch(contactActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notify = () => (\r\n  <div className={styles.container}>\r\n    <p>Contact already exist!</p>\r\n  </div>\r\n);\r\n\r\nexport default Notify;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport localStorageLoader from '../../utils/localStorage';\r\nimport Section from './Section/Section';\r\nimport InputForm from './InputForm/InputForm';\r\nimport ContactList from './ContactsList/ContactsList';\r\nimport Filter from './Filter/Filter';\r\nimport HeaderTransition from './transitions/PhonebookHeader.module.css';\r\nimport Notify from '../../utils/Notification';\r\nimport * as contactActions from '../../Redux/contactsActions';\r\nimport NotifyTransition from './transitions/Notify.module.css';\r\nimport FilterTransition from './transitions/Filter.module.css';\r\nimport styles from './Contacts.module.css';\r\n\r\nconst taskFilter = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.userName.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nclass Contacts extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoaded: true,\r\n    });\r\n    const contactsFromLS = localStorageLoader.load('contacts');\r\n    if (contactsFromLS) {\r\n      this.props.addContacts(contactsFromLS);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.contactState.contacts !== this.props.contactState.contacts)\r\n      localStorageLoader.save('contacts', this.props.contactState.contacts);\r\n  }\r\n\r\n  render() {\r\n    const filteredTasks = taskFilter(\r\n      this.props.contactState.contacts,\r\n      this.props.contactState.filter,\r\n    );\r\n    return (\r\n      <>\r\n        <Section>\r\n          <CSSTransition\r\n            in={this.props.contactState.isContactExist}\r\n            timeout={250}\r\n            classNames={NotifyTransition}\r\n            unmountOnExit\r\n          >\r\n            <Notify />\r\n          </CSSTransition>\r\n          <CSSTransition\r\n            in={this.state.isLoaded}\r\n            timeout={500}\r\n            classNames={HeaderTransition}\r\n            unmountOnExit\r\n          >\r\n            <h1 className={styles.phoneBookHeader}> Phonebook </h1>\r\n          </CSSTransition>\r\n          <InputForm> </InputForm>\r\n          <CSSTransition\r\n            in={this.props.contactState.contacts.length >= 2}\r\n            timeout={250}\r\n            classNames={FilterTransition}\r\n            unmountOnExit\r\n          >\r\n            <Filter />\r\n          </CSSTransition>\r\n          <ContactList\r\n            contacts={\r\n              this.props.contactState.contacts.length >= 2\r\n                ? filteredTasks\r\n                : this.props.contactState.contacts\r\n            }\r\n          ></ContactList>\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contactState: state,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContacts: contactsFromLS =>\r\n    dispatch(contactActions.addContactsLS(contactsFromLS)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React, { Fragment } from 'react';\r\nimport 'normalize.css';\r\nimport Contacts from './Contacts/Contacts';\r\n\r\nconst App = () => (\r\n  <Fragment>\r\n    <Contacts />\r\n  </Fragment>\r\n);\r\n\r\nexport default App;\r\n","import { Type } from './contactsActions';\r\n\r\nconst contactReducer = (\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    isContactExist: false,\r\n  },\r\n  action,\r\n) => {\r\n  switch (action.type) {\r\n    case Type.ADDCONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n\r\n    case Type.ADDCONTACTSLS:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, ...action.payload],\r\n      };\r\n\r\n    case Type.EXISTCONTACTTOGGLE:\r\n      return {\r\n        ...state,\r\n        isContactExist: !state.isContactExist,\r\n      };\r\n\r\n    case Type.DELETECONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload,\r\n        ),\r\n      };\r\n\r\n    case Type.CHANGEFILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contactReducer;\r\n","import { createStore } from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport contactReducer from './contactsReducers';\r\n\r\nconst store = createStore(contactReducer, devToolsEnhancer());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App';\r\nimport store from './Redux/store';\r\nimport 'normalize.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}